from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.fsm.context import FSMContext

def create_main_keyboard():
    change_phone = KeyboardButton(text="üì± –°–º–µ–Ω–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω")
    change_work = KeyboardButton(text="üè¢ –°–º–µ–Ω–∏—Ç—å –º–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã")
    check_work = KeyboardButton(text="‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å—Å—è –Ω–∞ —Ä–∞–±–æ—Ç–µ")
    set_schedule = KeyboardButton(text="üìÖ –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")

    return ReplyKeyboardMarkup(
        keyboard=[
            [change_phone],
            [change_work],
            [check_work],
            [set_schedule]
        ],
        resize_keyboard=True
    )


def create_phone_keyboard():
    phone_button = KeyboardButton(text="üì±–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", request_contact=True)
    return ReplyKeyboardMarkup(
        keyboard=[[phone_button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

def create_location_keyboard():
    location_button = KeyboardButton(text="üè¢–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é", request_location=True)
    return ReplyKeyboardMarkup(
        keyboard=[[location_button]],
        resize_keyboard=True,
        one_time_keyboard=True
    )

async def create_dates_buttons(username, employees_db, bot, state: FSMContext):
    id = employees_db.check_user_by_username(username)["user_id"]
    nearest_days = employees_db.get_employee_next_dates(username)

    buttons = []
    response_text = "üìÖ–°–ª–µ–¥—É—é—â–∏–µ 10 –¥–Ω–µ–π:\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –¥–∞—Ç—É, —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å\n\n"

    for key, value in nearest_days.items():
        buttons.append(
            [InlineKeyboardButton(text=f"{key} - {value}", callback_data=f"{username}:{key}:{value}")])

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö
    buttons.append([InlineKeyboardButton(text="‚úÖ–ó–∞–≤–µ—Ä—à–∏—Ç—å", callback_data="save_schedule")])

    inline_kb = InlineKeyboardMarkup(inline_keyboard=buttons)
    sent_message = await bot.send_message(id, response_text, reply_markup=inline_kb)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —É–¥–∞–ª–∏—Ç—å –ø–æ–∑–∂–µ
    await state.update_data(sent_message_id=sent_message.message_id)

    return inline_kb